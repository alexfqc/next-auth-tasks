name: E2E Tests

on:
  push:
    branches: [main]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    services:
      postgres_playwright:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: playwright
        ports:
          - 5434:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Create .env.playwright file
        run: |
          echo "${{ secrets.ENV_PLAYWRIGHT }}" > .env.playwright

      - name: Start Next.js app in background
        run: |
          nohup npm run dev:e2e &
          echo "Waiting for app to start..."
          for i in {1..60}; do
            if curl -s http://localhost:3000 > /dev/null; then
              echo "App is up!";
              break;
            fi
            echo "Waiting for localhost:3000... ($i)";
            sleep 2;
          done
          if ! curl -s http://localhost:3000 > /dev/null; then
            echo "App did not start in time." >&2;
            exit 1;
          fi

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npm run run:e2e
